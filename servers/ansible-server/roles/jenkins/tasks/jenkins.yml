---
  - name: Install jre8
    apt:
     name: openjdk-8-jre
     state: present
     update_cache: yes
    become: true
  
  - name: Adding Oracle Java Repository
    become: true
    apt_repository: 
      repo: 'ppa:webupd8team/java'

  - name: Accept Java 8 License
    become: true
    become_user: root
    debconf: 
      name: 'oracle-java8-installer' 
      question: 'shared/accepted-oracle-license-v1-1' 
      value: 'true' 
      vtype: 'select'

  - name: Install Oracle Java 8
    become: true
    apt: 
      name: ['oracle-java8-installer', 'ca-certificates', 'oracle-java8-set-default'] 
      state: latest

  - name: add jenkins repo key
    apt_key:
     url: https://pkg.jenkins.io/debian/jenkins.io.key
     state: present
    become: true
    

  - name: add jenkins repo list file into sources.list.d
    apt_repository:
     repo: deb http://pkg.jenkins.io/debian-stable binary/
     state: present
    become: true

  - name: Updating and upgrading apt-get packages
    become: true
    apt:
      force_apt_get: yes
      update_cache: yes
      cache_valid_time: 86400

  - name: install jenkins
    apt:
     name: jenkins
     state: present
     update_cache: yes
    become: true
    register: jenkins_state

  - name: Start Jenkins service and enable on boot
    service:
      name: jenkins
      state: started
      enabled: yes

# configuring
   
  - name: reading admin password
    shell: cat /var/lib/jenkins/secrets/initialAdminPassword
    register: adminpwd
    become_user: jenkins
    become: true
   
  - name: Add admin and unlock Jenkins automatically
    jenkins_script: 
     script: "{{ lookup('file' , '../templates/groovy_add_user.groovy') }}"
     user: admin
     password: "{{ adminpwd.stdout }}"
    when: jenkins_state.changed


  - name: sign into jenkins and complete setup
    jenkins_script:
     script: "{{ lookup('file' , '../templates/groovy_setup_user.groovy') }}"
     user: admin
     password: "{{ adminpwd.stdout }}"
    when: jenkins_state.changed 

  - name: disable security for installation
    become: true
    lineinfile: 
      dest: /var/lib/jenkins/config.xml
      regexp: '<useSecurity>true</useSecurity>'
      line: '  <useSecurity>false</useSecurity>'


   #- name: give enough time for jenkins to reload
    # uri:
     #  url: http://192.168.33.200:8080
      # url_username: adminpwd
       #url_password: "{{ adminpwd.stdout }}"
       #status_code: 200
       #timeout: 5
     #register: jenk_status
     #retries: 20
     #delay: 5
     #until: "'stat' in jenk_status and jenk_status['stat'] == 200"

  - name: plugins installation
    become: true
    become_user: jenkins
    jenkins_plugin:
      name: "{{ item }}"
      state: latest
      url_username: admin
      url_password: "{{ adminpwd.stdout }}"
      url: http://192.168.33.200:8080
      validate_certs: no
    with_items: "{{ plugins }}"
    when: jenkins_state.changed

  - name: Changing default port for Jenkins
    become: true
    replace:
      dest: /etc/default/jenkins
      regexp: 'HTTP_PORT=8080'
      replace: 'HTTP_PORT=8090'
      backup: yes

  - name: Restart jenkins
    become: true
    command: systemctl restart jenkins 

# Installing Python package manager

  - name: Installing Python pip
    become: true
    apt:
      pkg: python-pip
      state: latest

  - name: Installing Python 3 pip
    become: true
    apt:
      pkg: python3-pip
      state: latest

  - name: Symlink pip and pip3
    become: true
    file:
      src: /usr/bin/pip3
      dest: /usr/bin/pip
      state: link

# Installing Jenkins Job Builder package

  - name: Install jenkins-job-builder package
    become: true
    pip:
      name: jenkins-job-builder
      executable: pip2
      state: latest

  - name: Create jenkins_jobs directory
    become: true
    file:
      path: /etc/jenkins_jobs
      state: directory
      mode: 0755

  - name: Copy jenkins_jobs.ini script
    become: true
    template:
      src: /ansible-server/roles/jenkins/templates/jenkins_jobs.ini
      dest: /etc/jenkins_jobs/jenkins_jobs.ini
      mode: 0755
      force: yes

  - name: Create jobs directory
    file:
      path: /home/vagrant/jobs
      state: directory
      mode: 0755

  - name: Copy job file templates
    become: yes
    template:
      src: "/ansible-server/roles/jenkins/templates/{{ item }}"
      dest: "/home/vagrant/jobs/{{ item }}"
      force: yes
      mode: 0755
    with_items:
    - "defaults.yml"
    - "create_job.yml"

  - name: Get Jenkins crumb
    become: true
    uri:
      url: 'http://127.0.0.1:8090/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
      user: "user"
      password: "password"
      force_basic_auth: yes
      return_content: yes
    register: crumb

  # - name: Trigger builds
  #   uri:
  #     method: POST
  #     url: "http://127.0.0.1:8090/job/{{ item }}/build"
  #     user: "user"
  #     password: "password"
  #     force_basic_auth: yes
  #     status_code: "201"
  #     headers:
  #       Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
  #   with_items:
  #   - checkbox.io_job
---
# tasks file for infrastruture
- name: Add docker GPG key to apt source
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  args:
    warn: no

- name: Get ubuntu distribution name
  command: lsb_release -cs
  register: release

- debug:
    var: release.stdout

- name: Add docker repo list to source
  command: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{release.stdout}} stable"
  become: true

# - name: Update package list
#   apt:
#     update_cache: yes
#   become: true

- name: Update package list
  command: apt-get update
  become: true

- name: Install docker ce
  become: true
  command: apt-get install -y docker-ce
  
- name: Ensure group docker exists
  become: true
  group:
    name: docker
    state: present

- name: Get group output
  command: groups
  register: groups_before

- debug:
    var: groups_before.stdout

- name: Add user ubuntu to the docker group
  become: true
  user: 
    name: ubuntu
    groups: docker
    append: yes

- name: Reset ssh connection to allow user changes to affect
  meta: reset_connection

- name: Get which group ubuntu belongs to output
  command: groups ubuntu
  register: groups_after
  
- debug:
    var: groups_after.stdout

- name: Restart docker daemon in case still got permision deny when trying to connect socket
  become: true
  command: service docker restart

# - name: Create markdown-microservice directory
#   file:
#     path: "/home/ubuntu/markdown-microservice"
#     state: directory
#     mode: 0644

- name: Git clone markdown-microservice repo
  git:
    repo: "https://github.com/oscardoudou/markdown-microservice"
    dest: "/home/ubuntu/markdown-microservice"

- name: Install pip 
  become: true
  apt:
    name: python3-pip

- name: Install and make sure aws-cli update to date
  pip:
    name: awscli
    extra_args: --upgrade --user

- name: Aws-cli configure AWS_ACCESS_KEY_ID
  shell: /home/ubuntu/.local/bin/aws configure set aws_access_key_id {{lookup('env', 'AWS_ACCESS_KEY_ID')}}

- name: Aws-cli configure AWS_SECRET_ACCESS_KEY
  command: /home/ubuntu/.local/bin/aws configure set aws_secret_access_key {{lookup('env','AWS_SECRET_ACCESS_KEY')}}

- name: Aws-cli configure region
  command: /home/ubuntu/.local/bin/aws configure set default.region us-east-2

- name: Get docker login authenticate command for your registry
  command: /home/ubuntu/.local/bin/aws ecr get-login --no-include-email
  register: auth_command
  
# this is actually not a big deal, since if he doesn't have you aws credential there's no way he print off this docker auth command
# - debug:
#     var: auth_command.stdout

- name: Run docker login auth command
  command: "{{auth_command.stdout}}"

- name: Pull image from ecr
  command: docker pull 187167544325.dkr.ecr.us-east-2.amazonaws.com/test-repository


# - name: Make sure image is built
#     docker_image:
#       path: /home/ubuntu/markdown-microservice
#       name: {}
#       tag: v1
#       push: